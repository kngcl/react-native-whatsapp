{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport DATA from \"../data/chartdata\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Chat = function Chat() {\n  var _useState = useState(DATA),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatData = _useState2[0],\n    setChatData = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    setChatData(DATA);\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: chatData,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: styles.chatContainer,\n          children: [_jsx(Image, {\n            source: item.photos,\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.chatContent,\n            children: [_jsxs(View, {\n              style: styles.chatHeader,\n              children: [_jsx(Text, {\n                style: styles.chatName,\n                children: item.name\n              }), _jsx(Text, {\n                style: styles.chatTime,\n                children: item.time\n              })]\n            }), _jsxs(View, {\n              style: styles.messages,\n              children: [_jsx(Text, {\n                style: styles.chatMessage,\n                numberOfLines: 1,\n                children: item.lastMessage\n              }), item.totalUnread > 0 && _jsx(View, {\n                style: styles.unreadContainer,\n                children: _jsx(Text, {\n                  style: styles.totalUnread,\n                  children: item.totalUnread\n                })\n              })]\n            })]\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.chatButton,\n      onPress: function onPress() {\n        return navigation.navigate('contacts');\n      },\n      children: _jsx(MaterialCommunityIcons, {\n        name: \"android-messages\",\n        size: 24,\n        color: \"white\"\n      })\n    })]\n  });\n};\nexport default Chat;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 15\n  },\n  chatContainer: {\n    flexDirection: 'row',\n    marginRight: 16,\n    marginLeft: 16\n  },\n  image: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#128C7E',\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  chatContent: {\n    flex: 5,\n    borderBottomWidth: 0,\n    marginLeft: 16,\n    paddingBottom: 16,\n    marginBottom: 13\n  },\n  chatHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 2,\n    marginTop: 4\n  },\n  chatName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  chatTime: {\n    fontSize: 12,\n    color: '#A0A09E'\n  },\n  messages: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  chatMessage: {\n    fontSize: 14,\n    color: '#A0A09E',\n    width: '90%'\n  },\n  unreadContainer: {\n    height: 20,\n    width: 25,\n    borderRadius: 20,\n    backgroundColor: '#25D366',\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  totalUnread: {\n    fontSize: 10,\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: '900'\n  },\n  chatButton: {\n    position: 'absolute',\n    bottom: 30,\n    right: 20,\n    backgroundColor: '#0e806a',\n    width: 50,\n    height: 50,\n    borderRadius: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","DATA","MaterialCommunityIcons","useNavigation","jsx","_jsx","jsxs","_jsxs","Chat","_useState","_useState2","_slicedToArray","chatData","setChatData","navigation","View","style","styles","container","children","FlatList","data","keyExtractor","item","id","toString","renderItem","_ref","chatContainer","Image","source","photos","image","chatContent","chatHeader","Text","chatName","name","chatTime","time","messages","chatMessage","numberOfLines","lastMessage","totalUnread","unreadContainer","TouchableOpacity","chatButton","onPress","navigate","size","color","StyleSheet","create","flex","marginTop","flexDirection","marginRight","marginLeft","width","height","backgroundColor","borderRadius","alignItems","justifyContent","borderBottomWidth","paddingBottom","marginBottom","fontSize","fontWeight","alignContent","textAlign","position","bottom","right"],"sources":["/home/nnvg/Projects/react-native-whatsapp/src/screens/Chat.tsx"],"sourcesContent":["import { View, Text, StyleSheet, FlatList, Image, TouchableOpacity } from 'react-native'\nimport React, {useState, useEffect} from 'react'\nimport DATA from '../data/chartdata'\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nconst Chat = () => {\n  const [chatData, setChatData] = useState(DATA)\n  const navigation = useNavigation<any>()\n\n  useEffect(() => {\n      setChatData(DATA)\n  })\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={chatData}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={({item}) => (\n          <View style={styles.chatContainer}>\n             <Image source={item.photos} style={styles.image} />\n             <View style={styles.chatContent}>\n                <View style={styles.chatHeader}>\n                  <Text style={styles.chatName}>{item.name}</Text>\n                  <Text style={styles.chatTime}>{item.time}</Text>\n                </View>\n                <View style={styles.messages}>\n                  <Text \n                    style={styles.chatMessage}\n                    numberOfLines={1}\n                  >\n                    {item.lastMessage}\n                  </Text>\n                  {item.totalUnread > 0 && (\n                    <View style={styles.unreadContainer}>\n                        <Text style={styles.totalUnread}>{item.totalUnread}</Text>\n                    </View>\n                  )}\n                </View>\n             </View>\n          </View>\n        )}\n      />\n      <TouchableOpacity\n        style={styles.chatButton}\n        onPress={() => navigation.navigate('contacts')}\n      >\n        <MaterialCommunityIcons\n          name='android-messages'\n          size={24}\n          color='white'\n        />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default Chat\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      marginTop:15,\n    },\n    chatContainer: {\n      flexDirection:'row',\n      marginRight:16,\n      marginLeft:16,\n    },\n    image: {\n      width:50,\n      height:50,\n      backgroundColor: '#128C7E',\n      borderRadius:25,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    chatContent: {\n      flex: 5,\n      borderBottomWidth: 0,\n      marginLeft: 16,\n      paddingBottom: 16,\n      marginBottom: 13\n    },\n    chatHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: 2,\n      marginTop: 4\n    },\n    chatName: {\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    chatTime: {\n      fontSize: 12,\n      color: '#A0A09E'\n    },\n    messages: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    chatMessage: {\n      fontSize: 14,\n      color: '#A0A09E',\n      width: '90%'\n    },\n    unreadContainer: {\n      height: 20,\n      width: 25,\n      borderRadius: 20,\n      backgroundColor: '#25D366',\n      alignContent: 'center',\n      justifyContent: 'center'\n    },\n    totalUnread: {\n      fontSize: 10,\n      color: '#fff',\n      textAlign: 'center',\n      fontWeight: '900'\n    },\n    chatButton: {\n      position: 'absolute',\n      bottom: 30,\n      right: 20,\n      backgroundColor: '#0e806a',\n      width: 50,\n      height: 50,\n      borderRadius: 30,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}