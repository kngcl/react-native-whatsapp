{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Context from \"./context/Context\";\nimport { useAssets } from \"expo-asset\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nimport Header from \"./src/Header\";\nimport Navigation from \"./src/Navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs([\"setting a timer\", \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\"]);\nvar Stack = createStackNavigator();\nfunction App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useContext = useContext(Context),\n    colors = _useContext.theme.colors;\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      setLoading(false);\n      if (user) {\n        setCurrentUser(user);\n      }\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.tsx to start working on your app!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nfunction Home() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {}), _jsx(Header, {}), _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: _jsx(Navigation, {})\n    })]\n  });\n}\nfunction Main() {\n  var _useAssets = useAssets([require(\"./assets/user-icon.png\"), require(\"./assets/welcome-img.png\")]),\n    _useAssets2 = _slicedToArray(_useAssets, 1),\n    assets = _useAssets2[0];\n  if (!assets) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsx(ContextWrapper, {\n    children: _jsx(App, {})\n  });\n}\nexport default Main;","map":{"version":3,"names":["StatusBar","LogBox","StyleSheet","Text","View","Context","useAssets","React","useContext","useEffect","useState","onAuthStateChanged","auth","createStackNavigator","ContextWrapper","Header","Navigation","jsx","_jsx","jsxs","_jsxs","ignoreLogs","Stack","App","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","loading","setLoading","_useContext","colors","theme","unsubscribe","user","children","style","styles","container","create","flex","backgroundColor","alignItems","justifyContent","Home","Main","_useAssets","require","_useAssets2","assets"],"sources":["/home/nnvg/Projects/react-native-whatsapp/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { LogBox, StyleSheet, Text, View } from \"react-native\";\nimport Context from \"./context/Context\";\n\nimport { useAssets } from \"expo-asset\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./src/screens/SignIn\";\n\nimport ContextWrapper from \"./context/ContextWrapper\";\nimport Profile from \"./src/screens/Profile\";\nimport Header from './src/Header';\nimport Navigation from './src/Navigation';\n\nLogBox.ignoreLogs([\n  \"setting a timer\",\n  \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\",\n]);\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n  const {\n    theme: { colors },\n  } = useContext(Context);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setLoading(false);\n      if (user) {\n        setCurrentUser(user);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  if (loading) {\n    return <Text>Loading...</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.tsx to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nfunction Home() {\n  return (\n    <View style={styles.container}>\n      <StatusBar />\n      <Header />\n\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <Navigation />\n      </View>\n    </View>\n  );\n}\n\nfunction Main() {\n  const [assets] = useAssets([\n    require(\"./assets/user-icon.png\"),\n    require(\"./assets/welcome-img.png\"),\n  ]);\n\n  if (!assets) {\n    return <Text>Loading...</Text>;\n  }\n  return (\n    <ContextWrapper>\n      <App />\n    </ContextWrapper>\n  );\n}\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}