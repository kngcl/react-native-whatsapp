{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport GlobalContext from \"../context/Context\";\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport Avatar from \"./Avatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListItem(_ref) {\n  var type = _ref.type,\n    description = _ref.description,\n    user = _ref.user,\n    style = _ref.style,\n    time = _ref.time,\n    room = _ref.room,\n    image = _ref.image;\n  var navigation = useNavigation();\n  var _useContext = useContext(GlobalContext),\n    colors = _useContext.theme.colors;\n  return _jsx(TouchableOpacity, {\n    style: _objectSpread({\n      height: 80\n    }, style),\n    onPress: function onPress() {\n      return navigation.navigate(\"chat\", {\n        user: user,\n        room: room,\n        image: image\n      });\n    },\n    children: _jsxs(Grid, {\n      style: {\n        maxHeight: 80\n      },\n      children: [_jsx(Col, {\n        style: {\n          width: 80,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Avatar, {\n          user: user,\n          size: type === \"contacts\" ? 40 : 65\n        })\n      }), _jsxs(Col, {\n        style: {\n          marginLeft: 10\n        },\n        children: [_jsxs(Row, {\n          style: {\n            alignItems: \"center\"\n          },\n          children: [_jsx(Col, {\n            children: _jsx(Text, {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: colors.text\n              },\n              children: user.contactName || user.displayName\n            })\n          }), time && _jsx(Col, {\n            style: {\n              alignItems: \"flex-end\"\n            },\n            children: _jsx(Text, {\n              style: {\n                color: colors.secondaryText,\n                fontSize: 11\n              },\n              children: new Date(time.seconds * 1000).toLocaleDateString()\n            })\n          })]\n        }), description && _jsx(Row, {\n          style: {\n            marginTop: -5\n          },\n          children: _jsx(Text, {\n            style: {\n              color: colors.secondaryText,\n              fontSize: 13\n            },\n            children: description\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useNavigation","React","useContext","Text","TouchableOpacity","GlobalContext","Grid","Row","Col","Avatar","jsx","_jsx","jsxs","_jsxs","ListItem","_ref","type","description","user","style","time","room","image","navigation","_useContext","colors","theme","_objectSpread","height","onPress","navigate","children","maxHeight","width","alignItems","justifyContent","size","marginLeft","fontWeight","fontSize","color","text","contactName","displayName","secondaryText","Date","seconds","toLocaleDateString","marginTop"],"sources":["/home/evance/projects/Watsapp-react-native/components/ListItem.tsx"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\nimport React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport GlobalContext from \"../context/Context\";\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport Avatar from \"./Avatar\";\nexport default function ListItem({\n  type,\n  description,\n  user,\n  style,\n  time,\n  room,\n  image,\n}:any) {\n  const navigation = useNavigation<any>();\n  const {\n    theme: { colors },\n  } = useContext(GlobalContext);\n  return (\n    <TouchableOpacity\n      style={{ height: 80, ...style }}\n      onPress={() => navigation.navigate(\"chat\", { user, room, image })}\n    >\n      <Grid style={{ maxHeight: 80 }}>\n        <Col\n          style={{ width: 80, alignItems: \"center\", justifyContent: \"center\" }}\n        >\n          <Avatar user={user} size={type === \"contacts\" ? 40 : 65} />\n        </Col>\n        <Col style={{ marginLeft: 10 }}>\n          <Row style={{ alignItems: \"center\" }}>\n            <Col>\n              <Text\n                style={{ fontWeight: \"bold\", fontSize: 16, color: colors.text }}\n              >\n                {user.contactName || user.displayName}\n              </Text>\n            </Col>\n            {time && (\n              <Col style={{ alignItems: \"flex-end\" }}>\n                <Text style={{ color: colors.secondaryText, fontSize: 11 }}>\n                  {new Date(time.seconds * 1000).toLocaleDateString()}\n                </Text>\n              </Col>\n            )}\n          </Row>\n          {description && (\n            <Row style={{ marginTop: -5 }}>\n              <Text style={{ color: colors.secondaryText, fontSize: 13 }}>\n                {description}\n              </Text>\n            </Row>\n          )}\n        </Col>\n      </Grid>\n    </TouchableOpacity>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}