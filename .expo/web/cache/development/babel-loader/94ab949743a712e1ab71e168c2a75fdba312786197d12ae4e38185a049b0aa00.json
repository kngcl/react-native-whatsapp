{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { storage } from \"./config/firebase\";\nimport { uploadBytes } from \"firebase/storage\";\nimport { nanoid } from 'nanoid';\nimport \"react-native-get-random-values\";\nexport function pickImage() {\n  return _pickImage.apply(this, arguments);\n}\nfunction _pickImage() {\n  _pickImage = _asyncToGenerator(function* () {\n    var result = yield ImagePicker.launchCameraAsync();\n    return result;\n  });\n  return _pickImage.apply(this, arguments);\n}\nexport function askForPermission() {\n  return _askForPermission.apply(this, arguments);\n}\nfunction _askForPermission() {\n  _askForPermission = _asyncToGenerator(function* () {\n    var _yield$ImagePicker$re = yield ImagePicker.requestCameraPermissionsAsync(),\n      status = _yield$ImagePicker$re.status;\n    return status;\n  });\n  return _askForPermission.apply(this, arguments);\n}\nexport function uplaodLoad(_x, _x2, _x3) {\n  return _uplaodLoad.apply(this, arguments);\n}\nfunction _uplaodLoad() {\n  _uplaodLoad = _asyncToGenerator(function* (uri, path, fname) {\n    var blob = yield new Promise(function (resolve, reject) {\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function (e) {\n        console.log(e);\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open('GET', uri, true);\n      xhr.send(null);\n    });\n    var fileName = fname || nanoid();\n    var imageRef = ref(storage, path + \"/\" + fileName + \".jpeg\");\n    var snapshot = yield uploadBytes(imageRef, blob, {});\n  });\n  return _uplaodLoad.apply(this, arguments);\n}\nvar palette = {\n  tealGreen: \"#128c7e\",\n  tealGreenDark: \"#075e54\",\n  green: \"#25d366\",\n  lime: \"#dcf8c6\",\n  skyblue: \"#34b7f1\",\n  smokeWhite: \"#ece5dd\",\n  white: \"white\",\n  gray: \"#3C3C3C\",\n  lightGray: \"#757575\",\n  iconGray: \"#717171\"\n};\nexport var theme = {\n  colors: {\n    background: palette.smokeWhite,\n    foreground: palette.tealGreenDark,\n    primary: palette.tealGreen,\n    tertiary: palette.lime,\n    secondary: palette.green,\n    white: palette.white,\n    text: palette.gray,\n    secondaryText: palette.lightGray,\n    iconGray: palette.iconGray\n  }\n};","map":{"version":3,"names":["ImagePicker","storage","uploadBytes","nanoid","pickImage","_pickImage","apply","arguments","_asyncToGenerator","result","launchCameraAsync","askForPermission","_askForPermission","_yield$ImagePicker$re","requestCameraPermissionsAsync","status","uplaodLoad","_x","_x2","_x3","_uplaodLoad","uri","path","fname","blob","Promise","resolve","reject","xhr","onload","response","onerror","e","console","log","TypeError","responseType","open","send","fileName","imageRef","ref","snapshot","palette","tealGreen","tealGreenDark","green","lime","skyblue","smokeWhite","white","gray","lightGray","iconGray","theme","colors","background","foreground","primary","tertiary","secondary","text","secondaryText"],"sources":["/home/evance/projects/Watsapp-react-native/utils.js"],"sourcesContent":["import * as ImagePicker from \"expo-image-picker\";\nimport { storage } from \"./config/firebase\";\nimport { uploadBytes } from \"firebase/storage\";\nimport {nanoid} from 'nanoid'\nimport \"react-native-get-random-values\"\n\nexport async function pickImage() {\n  let result = await ImagePicker.launchCameraAsync();\n  return result;\n}\n\nexport async function askForPermission() {\n  const { status } = await ImagePicker.requestCameraPermissionsAsync();\n  return status;\n}\n\nexport async function uplaodLoad(uri,path,fname) {\n  const blob = await new Promise((resolve,reject)=>{\n    xhr.onload = function() {\n      resolve(xhr.response)\n    }\n    xhr.onerror = function(e){\n      console.log(e)\n      reject(new TypeError(\"Network request failed\"))\n    } \n    xhr.responseType = \"blob\"\n    xhr.open('GET',uri, true)\n    xhr.send(null)\n  });\n\n  const fileName = fname || nanoid()\n  const imageRef = ref(storage,`${path}/${fileName}.jpeg`);\n\n  const snapshot = await uploadBytes(imageRef,blob,{\n     \n  })\n\n}\n\nconst palette = {\n  tealGreen: \"#128c7e\",\n  tealGreenDark: \"#075e54\",\n  green: \"#25d366\",\n  lime: \"#dcf8c6\",\n  skyblue: \"#34b7f1\",\n  smokeWhite: \"#ece5dd\",\n  white: \"white\",\n  gray: \"#3C3C3C\",\n  lightGray: \"#757575\",\n  iconGray: \"#717171\",\n};\n\nexport const theme = {\n  colors: {\n    background: palette.smokeWhite,\n    foreground: palette.tealGreenDark,\n    primary: palette.tealGreen,\n    tertiary: palette.lime,\n    secondary: palette.green,\n    white: palette.white,\n    text: palette.gray,\n    secondaryText: palette.lightGray,\n    iconGray: palette.iconGray,\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}