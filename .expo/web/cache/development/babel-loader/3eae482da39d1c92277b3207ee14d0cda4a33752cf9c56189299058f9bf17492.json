{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useAssets } from \"expo-asset\";\nimport React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./src/screen/SignIn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nLogBox.ignoreLogs([\"setting a timer\", \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\"]);\nvar Stack = createStackNavigator();\nfunction App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  return _jsx(NavigationContainer, {\n    children: !currentUser ? _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"signIn\",\n        component: SignIn\n      })\n    }) : _jsx(Text, {\n      children: \"Hello\"\n    })\n  });\n}\nfunction Main() {\n  var _useAssets = useAssets([require(\"./assets/user-icon.png\"), require(\"./assets/welcome-img.png\")]),\n    _useAssets2 = _slicedToArray(_useAssets, 1),\n    assets = _useAssets2[0];\n  if (!assets) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsx(App, {});\n}\nexport default Main;","map":{"version":3,"names":["useAssets","React","useState","NavigationContainer","createStackNavigator","SignIn","jsx","_jsx","LogBox","ignoreLogs","Stack","App","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","loading","setLoading","children","Navigator","screenOptions","headerShown","Screen","name","component","Text","Main","_useAssets","require","_useAssets2","assets"],"sources":["/home/evance/projects/Watsapp-react-native/App.tsx"],"sourcesContent":["import { LogBox, Text } from \"react-native\";\nimport { useAssets } from \"expo-asset\";\nimport React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./src/screen/SignIn\";\n\nLogBox.ignoreLogs([\n  \"setting a timer\",\n  \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\",\n]);\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n  /*   useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setLoading(false);\n      if (user) {\n        setCurrentUser(user);\n      }\n    });\n    return () => unsubscribe();\n  }, []); */\n\n  /*   if (!loading) {\n    return <Text>Loading...</Text>;\n  } */\n\n  return (\n    <NavigationContainer>\n      {!currentUser ? (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"signIn\" component={SignIn} />\n        </Stack.Navigator>\n      ) : (\n        <Text>Hello</Text>\n      )}\n    </NavigationContainer>\n  );\n}\n\nfunction Main() {\n  const [assets] = useAssets([\n    require(\"./assets/user-icon.png\"),\n    require(\"./assets/welcome-img.png\"),\n  ]);\n  if (!assets) {\n    return <Text>Loading...</Text>;\n  }\n  return <App />;\n}\nexport default Main;\n"],"mappings":";;;AACA,SAASA,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAGlD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAEzCC,MAAM,CAACC,UAAU,CAAC,CAChB,iBAAiB,EACjB,gGAAgG,CACjG,CAAC;AAEF,IAAMC,KAAK,GAAGN,oBAAoB,CAAC,CAAC;AAEpC,SAASO,GAAGA,CAAA,EAAG;EACb,IAAAC,SAAA,GAAsCV,QAAQ,CAAM,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA8Bf,QAAQ,CAAU,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA9CE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAgB1B,OACEX,IAAA,CAACJ,mBAAmB;IAAAkB,QAAA,EACjB,CAACN,WAAW,GACXR,IAAA,CAACG,KAAK,CAACY,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAH,QAAA,EACrDd,IAAA,CAACG,KAAK,CAACe,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEtB;MAAO,CAAE;IAAC,CAClC,CAAC,GAElBE,IAAA,CAACqB,IAAI;MAAAP,QAAA,EAAC;IAAK,CAAM;EAClB,CACkB,CAAC;AAE1B;AAEA,SAASQ,IAAIA,CAAA,EAAG;EACd,IAAAC,UAAA,GAAiB9B,SAAS,CAAC,CACzB+B,OAAO,yBAAyB,CAAC,EACjCA,OAAO,2BAA2B,CAAC,CACpC,CAAC;IAAAC,WAAA,GAAAlB,cAAA,CAAAgB,UAAA;IAHKG,MAAM,GAAAD,WAAA;EAIb,IAAI,CAACC,MAAM,EAAE;IACX,OAAO1B,IAAA,CAACqB,IAAI;MAAAP,QAAA,EAAC;IAAU,CAAM,CAAC;EAChC;EACA,OAAOd,IAAA,CAACI,GAAG,IAAE,CAAC;AAChB;AACA,eAAekB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}