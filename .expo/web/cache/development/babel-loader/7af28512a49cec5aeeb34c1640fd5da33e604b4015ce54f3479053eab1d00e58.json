{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport { useRoute } from \"@react-navigation/native\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ListItem from \"../../components/ListItem\";\nimport GlobalContext from \"../../context/Context\";\nimport { db } from \"../../config/firebase\";\nimport useContacts from \"../../hooks/useHook\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Contacts() {\n  var contacts = useContacts();\n  var route = useRoute();\n  var image = route.params && route.params.image;\n  return _jsx(FlatList, {\n    style: {\n      flex: 1,\n      padding: 10\n    },\n    data: contacts,\n    keyExtractor: function keyExtractor(_, i) {\n      return i;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return _jsx(ContactPreview, {\n        contact: item,\n        image: image\n      });\n    }\n  });\n}\nfunction ContactPreview(_ref2) {\n  var contact = _ref2.contact,\n    image = _ref2.image;\n  var _useContext = useContext(GlobalContext),\n    unfilteredRooms = _useContext.unfilteredRooms,\n    rooms = _useContext.rooms;\n  var _useState = useState(contact),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  useEffect(function () {\n    var q = query(collection(db, \"users\"), where(\"email\", \"==\", contact.email));\n    var unsubscribe = onSnapshot(q, function (snapshot) {\n      if (snapshot.docs.length) {\n        var userDoc = snapshot.docs[0].data();\n        setUser(function (prevUser) {\n          return _objectSpread(_objectSpread({}, prevUser), {}, {\n            userDoc: userDoc\n          });\n        });\n      }\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return _jsx(ListItem, {\n    style: {\n      marginTop: 7\n    },\n    type: \"contacts\",\n    user: user,\n    image: image,\n    room: unfilteredRooms.find(function (room) {\n      return room.participantsArray.includes(contact.email);\n    })\n  });\n}","map":{"version":3,"names":["collection","onSnapshot","query","where","useRoute","React","useContext","useEffect","useState","FlatList","ListItem","GlobalContext","db","useContacts","jsx","_jsx","Contacts","contacts","route","image","params","style","flex","padding","data","keyExtractor","_","i","renderItem","_ref","item","ContactPreview","contact","_ref2","_useContext","unfilteredRooms","rooms","_useState","_useState2","_slicedToArray","user","setUser","q","email","unsubscribe","snapshot","docs","length","userDoc","prevUser","_objectSpread","marginTop","type","room","find","participantsArray","includes"],"sources":["/home/evance/projects/Watsapp-react-native/src/screens/Contacts.tsx"],"sourcesContent":["import { collection, onSnapshot, query, where } from \"@firebase/firestore\";\nimport { useRoute } from \"@react-navigation/native\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { FlatList } from \"react-native\";\nimport ListItem from \"../../components/ListItem\";\nimport GlobalContext from \"../../context/Context\";\nimport { db } from \"../../config/firebase\";\nimport useContacts from \"../../hooks/useHook\";\n\nexport default function Contacts() {\n  const contacts = useContacts();\n  const route = useRoute<any>();\n  const image = route.params && route.params.image;\n  return (\n    <FlatList\n      style={{ flex: 1, padding: 10 }}\n      data={contacts}\n      keyExtractor={(_:any, i:any) => i}\n      renderItem={({ item }) => <ContactPreview contact={item} image={image} />}\n    />\n  );\n}\n\nfunction ContactPreview({ contact, image }: any) {\n  const { unfilteredRooms, rooms } = useContext<any>(GlobalContext);\n  const [user, setUser] = useState<any>(contact);\n\n  useEffect(() => {\n    const q = query(\n      collection(db, \"users\"),\n      where(\"email\", \"==\", contact.email)\n    );\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      if (snapshot.docs.length) {\n        const userDoc = snapshot.docs[0].data();\n        setUser((prevUser: any) => ({ ...prevUser, userDoc }));\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return (\n    <ListItem\n      style={{ marginTop: 7 }}\n      type=\"contacts\"\n      user={user}\n      image={image}\n      room={unfilteredRooms.find((room: any) =>\n        room.participantsArray.includes(contact.email)\n      )}\n    />\n  );\n}\n"],"mappings":";;;;AAAA,SAASA,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,QAAQ,qBAAqB;AAC1E,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAE/D,OAAOC,QAAQ;AACf,OAAOC,aAAa;AACpB,SAASC,EAAE;AACX,OAAOC,WAAW;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAE9C,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,IAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,IAAMK,KAAK,GAAGd,QAAQ,CAAM,CAAC;EAC7B,IAAMe,KAAK,GAAGD,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAACD,KAAK;EAChD,OACEJ,IAAA,CAACN,QAAQ;IACPY,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAE;IAChCC,IAAI,EAAEP,QAAS;IACfQ,YAAY,EAAE,SAAAA,aAACC,CAAK,EAAEC,CAAK;MAAA,OAAKA,CAAC;IAAA,CAAC;IAClCC,UAAU,EAAE,SAAAA,WAAAC,IAAA;MAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MAAA,OAAOf,IAAA,CAACgB,cAAc;QAACC,OAAO,EAAEF,IAAK;QAACX,KAAK,EAAEA;MAAM,CAAE,CAAC;IAAA;EAAC,CAC3E,CAAC;AAEN;AAEA,SAASY,cAAcA,CAAAE,KAAA,EAA0B;EAAA,IAAvBD,OAAO,GAAAC,KAAA,CAAPD,OAAO;IAAEb,KAAK,GAAAc,KAAA,CAALd,KAAK;EACtC,IAAAe,WAAA,GAAmC5B,UAAU,CAAMK,aAAa,CAAC;IAAzDwB,eAAe,GAAAD,WAAA,CAAfC,eAAe;IAAEC,KAAK,GAAAF,WAAA,CAALE,KAAK;EAC9B,IAAAC,SAAA,GAAwB7B,QAAQ,CAAMwB,OAAO,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB/B,SAAS,CAAC,YAAM;IACd,IAAMmC,CAAC,GAAGxC,KAAK,CACbF,UAAU,CAACY,EAAE,EAAE,OAAO,CAAC,EACvBT,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE6B,OAAO,CAACW,KAAK,CACpC,CAAC;IACD,IAAMC,WAAW,GAAG3C,UAAU,CAACyC,CAAC,EAAE,UAACG,QAAQ,EAAK;MAC9C,IAAIA,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE;QACxB,IAAMC,OAAO,GAAGH,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACtB,IAAI,CAAC,CAAC;QACvCiB,OAAO,CAAC,UAACQ,QAAa;UAAA,OAAAC,aAAA,CAAAA,aAAA,KAAWD,QAAQ;YAAED,OAAO,EAAPA;UAAO;QAAA,CAAG,CAAC;MACxD;IACF,CAAC,CAAC;IACF,OAAO;MAAA,OAAMJ,WAAW,CAAC,CAAC;IAAA;EAC5B,CAAC,EAAE,EAAE,CAAC;EACN,OACE7B,IAAA,CAACL,QAAQ;IACPW,KAAK,EAAE;MAAE8B,SAAS,EAAE;IAAE,CAAE;IACxBC,IAAI,EAAC,UAAU;IACfZ,IAAI,EAAEA,IAAK;IACXrB,KAAK,EAAEA,KAAM;IACbkC,IAAI,EAAElB,eAAe,CAACmB,IAAI,CAAC,UAACD,IAAS;MAAA,OACnCA,IAAI,CAACE,iBAAiB,CAACC,QAAQ,CAACxB,OAAO,CAACW,KAAK,CAAC;IAAA,CAChD;EAAE,CACH,CAAC;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}