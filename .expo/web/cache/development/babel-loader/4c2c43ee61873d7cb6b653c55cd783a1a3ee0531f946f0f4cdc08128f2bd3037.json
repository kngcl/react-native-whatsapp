{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useRoute } from \"@react-navigation/native\";\nimport \"react-native-get-random-values\";\nimport { nanoid } from \"nanoid\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { auth, db } from \"../../config/firebase\";\nimport GlobalContext from \"../../context/Context\";\nimport { addDoc, collection, doc, onSnapshot, setDoc, updateDoc } from \"@firebase/firestore\";\nimport { Actions, Bubble, GiftedChat, InputToolbar } from \"react-native-gifted-chat\";\nimport { pickImage, uploadImage } from \"../../utils\";\nimport ImageView from \"react-native-image-viewing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar randomId = nanoid();\nexport default function Chat() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    roomHash = _useState2[0],\n    setRoomHash = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedImageView = _useState8[0],\n    setSeletedImageView = _useState8[1];\n  var _useContext = useContext(GlobalContext),\n    colors = _useContext.theme.colors;\n  var currentUser = auth.currentUser;\n  var route = useRoute();\n  var room = route.params.room;\n  var selectedImage = route.params.image;\n  var userB = route.params.user;\n  var senderUser = currentUser != null && currentUser.photoURL ? {\n    name: currentUser == null ? void 0 : currentUser.displayName,\n    _id: currentUser == null ? void 0 : currentUser.uid,\n    avatar: currentUser == null ? void 0 : currentUser.photoURL\n  } : {\n    name: currentUser == null ? void 0 : currentUser.displayName,\n    _id: currentUser == null ? void 0 : currentUser.uid\n  };\n  var roomId = room ? room.id : randomId;\n  var roomRef = doc(db, \"rooms\", roomId);\n  var roomMessagesRef = collection(db, \"rooms\", roomId, \"messages\");\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      if (!room) {\n        var currUserData = {\n          displayName: currentUser == null ? void 0 : currentUser.displayName,\n          email: currentUser == null ? void 0 : currentUser.email\n        };\n        if (currentUser != null && currentUser.photoURL) {\n          currUserData.photoURL = currentUser == null ? void 0 : currentUser.photoURL;\n        }\n        var userBData = {\n          displayName: userB.contactName || userB.displayName || \"\",\n          email: userB.email\n        };\n        if (userB.photoURL) {\n          userBData.photoURL = userB.photoURL;\n        }\n        var roomData = {\n          participants: [currUserData, userBData],\n          participantsArray: [currentUser == null ? void 0 : currentUser.email, userB.email]\n        };\n        try {\n          yield setDoc(roomRef, roomData);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      var emailHash = (currentUser == null ? void 0 : currentUser.email) + \":\" + userB.email;\n      setRoomHash(emailHash);\n      if (selectedImage && selectedImage.uri) {\n        yield sendImage(selectedImage.uri, emailHash);\n      }\n    })();\n  }, []);\n  useEffect(function () {\n    var unsubscribe = onSnapshot(roomMessagesRef, function (querySnapshot) {\n      var messagesFirestore = querySnapshot.docChanges().filter(function (_ref2) {\n        var type = _ref2.type;\n        return type === \"added\";\n      }).map(function (_ref3) {\n        var doc = _ref3.doc;\n        var message = doc.data();\n        return _objectSpread(_objectSpread({}, message), {}, {\n          createdAt: message.createdAt.toDate()\n        });\n      }).sort(function (a, b) {\n        return b.createdAt.getTime() - a.createdAt.getTime();\n      });\n      appendMessages(messagesFirestore);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var appendMessages = useCallback(function (messages) {\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, [messages]);\n  function onSend() {\n    return _onSend.apply(this, arguments);\n  }\n  function _onSend() {\n    _onSend = _asyncToGenerator(function* () {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var writes = messages.map(function (m) {\n        return addDoc(roomMessagesRef, m);\n      });\n      var lastMessage = messages[messages.length - 1];\n      writes.push(updateDoc(roomRef, {\n        lastMessage: lastMessage\n      }));\n      yield Promise.all(writes);\n    });\n    return _onSend.apply(this, arguments);\n  }\n  function sendImage(_x, _x2) {\n    return _sendImage.apply(this, arguments);\n  }\n  function _sendImage() {\n    _sendImage = _asyncToGenerator(function* (uri, roomPath) {\n      var _yield$uploadImage = yield uploadImage(uri, \"images/rooms/\" + (roomPath || roomHash)),\n        url = _yield$uploadImage.url,\n        fileName = _yield$uploadImage.fileName;\n      var message = {\n        _id: fileName,\n        text: \"\",\n        createdAt: new Date(),\n        user: senderUser,\n        image: url\n      };\n      var lastMessage = _objectSpread(_objectSpread({}, message), {}, {\n        text: \"Image\"\n      });\n      yield Promise.all([addDoc(roomMessagesRef, message), updateDoc(roomRef, {\n        lastMessage: lastMessage\n      })]);\n    });\n    return _sendImage.apply(this, arguments);\n  }\n  function handlePhotoPicker() {\n    return _handlePhotoPicker.apply(this, arguments);\n  }\n  function _handlePhotoPicker() {\n    _handlePhotoPicker = _asyncToGenerator(function* () {\n      var result = yield pickImage();\n      if (!result.canceled) {\n        yield sendImage(result.uri, result.roomPath);\n      }\n    });\n    return _handlePhotoPicker.apply(this, arguments);\n  }\n  return _jsx(ImageBackground, {\n    resizeMode: \"cover\",\n    source: require(\"../../assets/welcome-img.png\"),\n    style: {\n      flex: 1\n    },\n    children: _jsx(GiftedChat, {\n      onSend: onSend,\n      messages: messages,\n      user: senderUser,\n      renderAvatar: null,\n      renderActions: function renderActions(props) {\n        return _jsx(Actions, _objectSpread(_objectSpread({}, props), {}, {\n          containerStyle: {\n            position: \"absolute\",\n            right: 50,\n            bottom: 5,\n            zIndex: 9999\n          },\n          onPressActionButton: handlePhotoPicker,\n          icon: function icon() {\n            return _jsx(Ionicons, {\n              name: \"camera\",\n              size: 30,\n              color: colors.iconGray\n            });\n          }\n        }));\n      },\n      timeTextStyle: {\n        right: {\n          color: colors.iconGray\n        }\n      },\n      renderSend: function renderSend(props) {\n        var text = props.text,\n          messageIdGenerator = props.messageIdGenerator,\n          user = props.user,\n          onSend = props.onSend;\n        return _jsx(TouchableOpacity, {\n          style: {\n            height: 40,\n            width: 40,\n            borderRadius: 40,\n            backgroundColor: colors.primary,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 5\n          },\n          onPress: function onPress() {\n            if (text && onSend) {\n              onSend({\n                text: text.trim(),\n                user: user,\n                _id: messageIdGenerator()\n              }, true);\n            }\n          },\n          children: _jsx(Ionicons, {\n            name: \"send\",\n            size: 20,\n            color: colors.white\n          })\n        });\n      },\n      renderInputToolbar: function renderInputToolbar(props) {\n        return _jsx(InputToolbar, _objectSpread(_objectSpread({}, props), {}, {\n          containerStyle: {\n            marginLeft: 10,\n            marginRight: 10,\n            marginBottom: 2,\n            borderRadius: 20,\n            paddingTop: 5\n          }\n        }));\n      },\n      renderBubble: function renderBubble(props) {\n        return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n          textStyle: {\n            right: {\n              color: colors.text\n            }\n          },\n          wrapperStyle: {\n            left: {\n              backgroundColor: colors.white\n            },\n            right: {\n              backgroundColor: colors.tertiary\n            }\n          }\n        }));\n      },\n      renderMessageImage: function renderMessageImage(props) {\n        return _jsx(View, {\n          style: {\n            borderRadius: 15,\n            padding: 2\n          },\n          children: _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              setModalVisible(true);\n              setSeletedImageView(props.currentMessage.image);\n            },\n            children: [_jsx(Image, {\n              resizeMode: \"contain\",\n              style: {\n                width: 200,\n                height: 200,\n                padding: 6,\n                borderRadius: 15,\n                resizeMode: \"cover\"\n              },\n              source: {\n                uri: props.currentMessage.image\n              }\n            }), selectedImageView ? _jsx(ImageView, {\n              imageIndex: 0,\n              visible: modalVisible,\n              onRequestClose: function onRequestClose() {\n                return setModalVisible(false);\n              },\n              images: [{\n                uri: selectedImageView\n              }]\n            }) : null]\n          })\n        });\n      }\n    })\n  });\n}","map":{"version":3,"names":["useRoute","nanoid","React","useCallback","useContext","useEffect","useState","View","ImageBackground","TouchableOpacity","Image","Ionicons","auth","db","GlobalContext","addDoc","collection","doc","onSnapshot","setDoc","updateDoc","Actions","Bubble","GiftedChat","InputToolbar","pickImage","uploadImage","ImageView","jsx","_jsx","jsxs","_jsxs","randomId","Chat","_useState","_useState2","_slicedToArray","roomHash","setRoomHash","_useState3","_useState4","messages","setMessages","_useState5","_useState6","modalVisible","setModalVisible","_useState7","_useState8","selectedImageView","setSeletedImageView","_useContext","colors","theme","currentUser","route","room","params","selectedImage","image","userB","user","senderUser","photoURL","name","displayName","_id","uid","avatar","roomId","id","roomRef","roomMessagesRef","_asyncToGenerator","currUserData","email","userBData","contactName","roomData","participants","participantsArray","error","console","log","emailHash","uri","sendImage","unsubscribe","querySnapshot","messagesFirestore","docChanges","filter","_ref2","type","map","_ref3","message","data","_objectSpread","createdAt","toDate","sort","a","b","getTime","appendMessages","previousMessages","append","onSend","_onSend","apply","arguments","length","undefined","writes","m","lastMessage","push","Promise","all","_x","_x2","_sendImage","roomPath","_yield$uploadImage","url","fileName","text","Date","handlePhotoPicker","_handlePhotoPicker","result","canceled","resizeMode","source","require","style","flex","children","renderAvatar","renderActions","props","containerStyle","position","right","bottom","zIndex","onPressActionButton","icon","size","color","iconGray","timeTextStyle","renderSend","messageIdGenerator","height","width","borderRadius","backgroundColor","primary","alignItems","justifyContent","marginBottom","onPress","trim","white","renderInputToolbar","marginLeft","marginRight","paddingTop","renderBubble","textStyle","wrapperStyle","left","tertiary","renderMessageImage","padding","currentMessage","imageIndex","visible","onRequestClose","images"],"sources":["/home/evance/projects/Watsapp-react-native/src/screens/Chat.tsx"],"sourcesContent":["// @refresh reset\nimport { useRoute } from \"@react-navigation/native\";\nimport \"react-native-get-random-values\";\nimport { nanoid } from \"nanoid\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  ImageBackground,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { auth, db } from \"../../config/firebase\";\nimport GlobalContext from \"../../context/Context\";\nimport {\n  addDoc,\n  collection,\n  doc,\n  onSnapshot,\n  setDoc,\n  updateDoc,\n} from \"@firebase/firestore\";\nimport {\n  Actions,\n  Bubble,\n  GiftedChat,\n  InputToolbar,\n} from \"react-native-gifted-chat\";\nimport { pickImage, uploadImage } from \"../../utils\";\nimport ImageView from \"react-native-image-viewing\";\n\nconst randomId = nanoid();\n\nexport default function Chat() {\n  const [roomHash, setRoomHash] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedImageView, setSeletedImageView] = useState(\"\");\n  const {\n    theme: { colors },\n  } = useContext(GlobalContext);\n  const { currentUser } = auth;\n  const route = useRoute<any>();\n  const room = route.params.room;\n  const selectedImage = route.params.image;\n  const userB = route.params.user;\n\n  const senderUser:any = currentUser?.photoURL!\n    ? {\n        name: currentUser?.displayName,\n        _id: currentUser?.uid,\n        avatar: currentUser?.photoURL,      }\n    : { name: currentUser?.displayName, _id: currentUser?.uid };\n\n  const roomId = room ? room.id : randomId;\n\n  const roomRef = doc(db, \"rooms\", roomId);\n  const roomMessagesRef = collection(db, \"rooms\", roomId, \"messages\");\n\n  useEffect(() => {\n    (async () => {\n      if (!room) {\n        const currUserData:any = {\n          displayName: currentUser?.displayName,\n          email: currentUser?.email,\n        };\n        if (currentUser?.photoURL) {\n          currUserData.photoURL = currentUser?.photoURL;\n        }\n        const userBData:any = {\n          displayName: userB.contactName || userB.displayName || \"\",\n          email: userB.email,\n        };\n        if (userB.photoURL) {\n          userBData.photoURL = userB.photoURL;\n        }\n        const roomData = {\n          participants: [currUserData, userBData],\n          participantsArray: [currentUser?.email, userB.email],\n        };\n        try {\n          await setDoc(roomRef, roomData);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      const emailHash = `${currentUser?.email}:${userB.email}`;\n      setRoomHash(emailHash);\n      if (selectedImage && selectedImage.uri) {\n        await sendImage(selectedImage.uri, emailHash);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(roomMessagesRef, (querySnapshot) => {\n      const messagesFirestore = querySnapshot\n        .docChanges()\n        .filter(({ type }) => type === \"added\")\n        .map(({ doc }) => {\n          const message = doc.data();\n          return { ...message, createdAt: message.createdAt.toDate() };\n        })\n        .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n      appendMessages(messagesFirestore);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const appendMessages = useCallback(\n    (messages:any) => {\n      setMessages((previousMessages) =>\n        GiftedChat.append(previousMessages, messages)\n      );\n    },\n    [messages]\n  );\n\n  async function onSend(messages:any = []) {\n    const writes = messages.map((m:any) => addDoc(roomMessagesRef, m));\n    const lastMessage = messages[messages.length - 1];\n    writes.push(updateDoc(roomRef, { lastMessage }));\n    await Promise.all(writes);\n  }\n\n  async function sendImage(uri:any, roomPath:any) {\n    const { url, fileName } = await uploadImage(\n      uri,\n      `images/rooms/${roomPath || roomHash}`\n    );\n    const message = {\n      _id: fileName,\n      text: \"\",\n      createdAt: new Date(),\n      user: senderUser,\n      image: url,\n    };\n    const lastMessage = { ...message, text: \"Image\" };\n    await Promise.all([\n      addDoc(roomMessagesRef, message),\n      updateDoc(roomRef, { lastMessage }),\n    ]);\n  }\n\n  async function handlePhotoPicker() {\n    const result:any = await pickImage();\n    if (!result.canceled) {\n      await sendImage(result.uri, result.roomPath);\n    }\n  }\n\n  return (\n    <ImageBackground\n      resizeMode=\"cover\"\n      source={require(\"../../assets/welcome-img.png\")}\n      style={{ flex: 1 }}\n    >\n      <GiftedChat\n        onSend={onSend}\n        messages={messages}\n        user={senderUser}\n        renderAvatar={null}\n        renderActions={(props) => (\n          <Actions\n            {...props}\n            containerStyle={{\n              position: \"absolute\",\n              right: 50,\n              bottom: 5,\n              zIndex: 9999,\n            }}\n            onPressActionButton={handlePhotoPicker}\n            icon={() => (\n              <Ionicons name=\"camera\" size={30} color={colors.iconGray} />\n            )}\n          />\n        )}\n        timeTextStyle={{ right: { color: colors.iconGray } }}\n        renderSend={(props) => {\n          const { text, messageIdGenerator, user, onSend }:any = props;\n          return (\n            <TouchableOpacity\n              style={{\n                height: 40,\n                width: 40,\n                borderRadius: 40,\n                backgroundColor: colors.primary,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: 5,\n              }}\n              onPress={() => {\n                if (text && onSend) {\n                  onSend(\n                    {\n                      text: text.trim(),\n                      user,\n                      _id: messageIdGenerator(),\n                    },\n                    true\n                  );\n                }\n              }}\n            >\n              <Ionicons name=\"send\" size={20} color={colors.white} />\n            </TouchableOpacity>\n          );\n        }}\n        renderInputToolbar={(props) => (\n          <InputToolbar\n            {...props}\n            containerStyle={{\n              marginLeft: 10,\n              marginRight: 10,\n              marginBottom: 2,\n              borderRadius: 20,\n              paddingTop: 5,\n            }}\n          />\n        )}\n        renderBubble={(props) => (\n          <Bubble\n            {...props}\n            textStyle={{ right: { color: colors.text } }}\n            wrapperStyle={{\n              left: {\n                backgroundColor: colors.white,\n              },\n              right: {\n                backgroundColor: colors.tertiary,\n              },\n            }}\n          />\n        )}\n        renderMessageImage={(props) => {\n          return (\n            <View style={{ borderRadius: 15, padding: 2 }}>\n              <TouchableOpacity\n                onPress={() => {\n                  setModalVisible(true);\n                  setSeletedImageView(props.currentMessage.image);\n                }}\n              >\n                <Image\n                  resizeMode=\"contain\"\n                  style={{\n                    width: 200,\n                    height: 200,\n                    padding: 6,\n                    borderRadius: 15,\n                    resizeMode: \"cover\",\n                  }}\n                  source={{ uri: props.currentMessage.image }}\n                />\n                {selectedImageView ? (\n                  <ImageView\n                    imageIndex={0}\n                    visible={modalVisible}\n                    onRequestClose={() => setModalVisible(false)}\n                    images={[{ uri: selectedImageView }]}\n                  />\n                ) : null}\n              </TouchableOpacity>\n            </View>\n          );\n        }}\n      />\n    </ImageBackground>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}