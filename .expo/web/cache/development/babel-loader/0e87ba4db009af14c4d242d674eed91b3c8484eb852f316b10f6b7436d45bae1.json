{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Context from \"./context/Context\";\nimport { useAssets } from \"expo-asset\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./screen/SignIn\";\nimport Profile from \"./screen/Profile\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs([\"setting a timer\", \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\"]);\nvar Stack = createStackNavigator();\nfunction App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useContext = useContext(Context),\n    colors = _useContext.theme.colors;\n  function App() {\n    var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentUser = _useState6[0],\n      setCurrentUser = _useState6[1];\n    var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n    var Stack = createStackNavigator();\n    function App() {\n      var _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentUser = _useState10[0],\n        setCurrentUser = _useState10[1];\n      var _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n      useEffect(function () {\n        var unsubscribe = onAuthStateChanged(auth, function (user) {\n          setLoading(false);\n          if (user) {\n            setCurrentUser(user);\n          }\n        });\n        return function () {\n          return unsubscribe();\n        };\n      }, []);\n      if (loading) {\n        return _jsx(Text, {\n          children: \"Loading...\"\n        });\n      }\n      return _jsx(NavigationContainer, {\n        children: !currentUser ? _jsx(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: _jsx(Stack.Screen, {\n            name: \"signIn\",\n            component: SignIn\n          })\n        }) : _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerStyle: {\n              backgroundColor: colors.foreground,\n              shadowOpacity: 0,\n              elevation: 0\n            },\n            headerTintColor: colors.white\n          },\n          children: [!currentUser.displayName && _jsx(Stack.Screen, {\n            name: \"profile\",\n            component: Profile,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"home\",\n            options: {\n              title: \"whatsapp\"\n            },\n            component: Home\n          })]\n        })\n      });\n    }\n  }\n  function Home() {\n    return _jsx(Text, {\n      children: \"Hi i have a profile\"\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: !currentUser ? _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"signIn\",\n        component: SignIn\n      })\n    }) : _jsx(Text, {\n      children: \"Hello\"\n    })\n  });\n}\nfunction Main() {\n  var _useAssets = useAssets([require(\"./assets/user-icon.png\"), require(\"./assets/welcome-img.png\")]),\n    _useAssets2 = _slicedToArray(_useAssets, 1),\n    assets = _useAssets2[0];\n  if (!assets) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsx(ContextWrapper, {\n    children: _jsx(App, {})\n  });\n}\nexport default Main;","map":{"version":3,"names":["Context","useAssets","React","useContext","useEffect","useState","onAuthStateChanged","auth","NavigationContainer","createStackNavigator","SignIn","Profile","ContextWrapper","jsx","_jsx","jsxs","_jsxs","LogBox","ignoreLogs","Stack","App","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","loading","setLoading","_useContext","colors","theme","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","unsubscribe","user","Text","children","Navigator","screenOptions","headerShown","Screen","name","component","headerStyle","backgroundColor","foreground","shadowOpacity","elevation","headerTintColor","white","displayName","options","title","Home","Main","_useAssets","require","_useAssets2","assets"],"sources":["/home/evance/projects/Watsapp-react-native/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { LogBox, StyleSheet, Text, View } from \"react-native\";\nimport Context from \"./context/Context\";\n\nimport { useAssets } from \"expo-asset\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./screen/SignIn\";\nimport Profile from \"./screen/Profile\";\nimport ContextWrapper from \"./context/ContextWrapper\";\n\n\nLogBox.ignoreLogs([\n  \"setting a timer\",\n  \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\",\n]);\n\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n  const {\n    theme: { colors },\n  } = useContext(Context);\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n\n   useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setLoading(false);\n      if (user) {\n        setCurrentUser(user);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  if (loading) {\n    return <Text>Loading...</Text>;\n  }\n\n  return (\n    <NavigationContainer>\n      {!currentUser ? (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"signIn\" component={SignIn} />\n        </Stack.Navigator>\n      ) : (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: colors.foreground,\n              shadowOpacity: 0,\n              elevation: 0,\n            },\n            headerTintColor: colors.white,\n          }}\n        >\n          {!currentUser.displayName && (\n            <Stack.Screen\n              name=\"profile\"\n              component={Profile}\n              options={{ headerShown: false }}\n            />\n          )}\n          <Stack.Screen\n            name=\"home\"\n            options={{ title: \"whatsapp\" }}\n            component={Home}\n          />\n        </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  );\n}\n}\nfunction Home() {\n  return <Text>Hi i have a profile</Text>;\n}\n\n\n\n  /*   if (!loading) {\n    return <Text>Loading...</Text>;\n  } */\n\n  return (\n    <NavigationContainer>\n      {!currentUser ? (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"signIn\" component={SignIn} />\n        </Stack.Navigator>\n      ) : (\n        <Text>Hello</Text>\n      )}\n    </NavigationContainer>\n  );\n}\n\n\n\n\n\n\nfunction Main() {\n\n  const [assets] = useAssets([\n    require(\"./assets/user-icon.png\"),\n    require(\"./assets/welcome-img.png\"),\n  ]);\n\n\n  if (!assets) {\n    return <Text>Loading...</Text>;\n  }\n  return (\n    <ContextWrapper>\n      <App />\n    </ContextWrapper>\n  );\n}\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}