{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./src/screen/SignIn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nLogBox.ignoreLogs([\"setting a timer\", \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\"]);\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  return _jsx(NavigationContainer, {\n    children: !currentUser ? _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"signIn\",\n        component: SignIn\n      })\n    }) : _jsx(Text, {\n      children: \"Hello\"\n    })\n  });\n}","map":{"version":3,"names":["React","useState","NavigationContainer","createStackNavigator","SignIn","jsx","_jsx","LogBox","ignoreLogs","Stack","App","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","loading","setLoading","children","Navigator","Screen","name","component","Text"],"sources":["/home/evance/projects/Watsapp-react-native/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { LogBox, StyleSheet, Text, View } from \"react-native\";\nimport { useAssets } from \"expo-asset\";\nimport React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignIn from \"./src/screen/SignIn\";\n\nLogBox.ignoreLogs([\n  \"setting a timer\",\n  \"AsyncStorage has been extracted  from react-native core and will be removed in feature release\",\n]);\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n/*   useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setLoading(false);\n      if (user) {\n        setCurrentUser(user);\n      }\n    });\n    return () => unsubscribe();\n  }, []); */\n\n/*   if (!loading) {\n    return <Text>Loading...</Text>;\n  } */\n\n  return (\n    <NavigationContainer>\n      {!currentUser ? (\n        <Stack.Navigator>\n          <Stack.Screen name=\"signIn\" component={SignIn} />\n        </Stack.Navigator>\n      ) : (\n        <Text>Hello</Text>\n      )}\n    </NavigationContainer>\n  );\n}\n\n\n /*  function Main() {\n  const [assets] = useAssets(\n    require(\"./assets/user-icon.png\")\n  );\n  if (!assets) {\n    return <Text>Loading...</Text>;\n  }\n  return <App />;\n}\nexport default Main;\n */\n"],"mappings":";;;AAGA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAGlD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAEzCC,MAAM,CAACC,UAAU,CAAC,CAChB,iBAAiB,EACjB,gGAAgG,CACjG,CAAC;AAEF,IAAMC,KAAK,GAAGN,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASO,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsCV,QAAQ,CAAM,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA8Bf,QAAQ,CAAU,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA9CE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAgB1B,OACEX,IAAA,CAACJ,mBAAmB;IAAAkB,QAAA,EACjB,CAACN,WAAW,GACXR,IAAA,CAACG,KAAK,CAACY,SAAS;MAAAD,QAAA,EACdd,IAAA,CAACG,KAAK,CAACa,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEpB;MAAO,CAAE;IAAC,CAClC,CAAC,GAElBE,IAAA,CAACmB,IAAI;MAAAL,QAAA,EAAC;IAAK,CAAM;EAClB,CACkB,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}