{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport * as Contacts from \"expo-contacts\";\nexport default function useContacts() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    contacts = _useState2[0],\n    setContacts = _useState2[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Contacts$reque = yield Contacts.requestPermissionsAsync(),\n        status = _yield$Contacts$reque.status;\n      if (status === 'granted') {\n        var _yield$Contacts$getCo = yield Contacts.getContactsAsync({\n            fields: [Contacts.Fields.Emails]\n          }),\n          data = _yield$Contacts$getCo.data;\n        if (data.length > 0) {\n          setContacts(data.filter(function (c) {\n            return c.firstName && c.emails && c.emails[0] && c.emails[0].email;\n          }).map(mapContactToUser));\n        }\n      }\n    })();\n  }, []);\n  return contacts;\n}\nfunction mapContactToUser(contact) {\n  return {\n    contactName: contact.firtName && contact.lastName ? contact.firstName + \" \" + contact.lastName : contact.firstName,\n    email: contact.eamils[0].email\n  };\n}","map":{"version":3,"names":["useEffect","useState","Contacts","useContacts","_useState","_useState2","_slicedToArray","contacts","setContacts","_asyncToGenerator","_yield$Contacts$reque","requestPermissionsAsync","status","_yield$Contacts$getCo","getContactsAsync","fields","Fields","Emails","data","length","filter","c","firstName","emails","email","map","mapContactToUser","contact","contactName","firtName","lastName","eamils"],"sources":["/home/evance/projects/Watsapp-react-native/hooks/useHook.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\"\nimport * as Contacts from \"expo-contacts\"\n\nexport default function useContacts() {\n    const [contacts, setContacts] = useState<any>([])\n    useEffect(() => {\n        (async () => {\n            const {status} = await Contacts.requestPermissionsAsync()\n            if (status === 'granted') {\n                const {data} = await Contacts.getContactsAsync({\n                    fields: [Contacts.Fields.Emails]\n                })\n                if (data.length > 0) {\n                  setContacts(\n                    data.filter(\n                        c => c.firstName && c.emails && c.emails[0] && c.emails[0].email\n                    ).map(mapContactToUser)\n                  )  \n                }\n            }\n        })()\n    }, [])\n    return contacts\n}\n\nfunction mapContactToUser (contact:any) {\n    return {\n        contactName: contact.firtName && contact.lastName ? \n        `${contact.firstName} ${contact.lastName}`\n        : contact.firstName, \n        email: contact.eamils[0].email\n    }\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAEzC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC,IAAAC,SAAA,GAAgCH,QAAQ,CAAM,EAAE,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5BL,SAAS,CAAC,YAAM;IACZS,iBAAA,CAAC,aAAY;MACT,IAAAC,qBAAA,SAAuBR,QAAQ,CAACS,uBAAuB,CAAC,CAAC;QAAlDC,MAAM,GAAAF,qBAAA,CAANE,MAAM;MACb,IAAIA,MAAM,KAAK,SAAS,EAAE;QACtB,IAAAC,qBAAA,SAAqBX,QAAQ,CAACY,gBAAgB,CAAC;YAC3CC,MAAM,EAAE,CAACb,QAAQ,CAACc,MAAM,CAACC,MAAM;UACnC,CAAC,CAAC;UAFKC,IAAI,GAAAL,qBAAA,CAAJK,IAAI;QAGX,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACnBX,WAAW,CACTU,IAAI,CAACE,MAAM,CACP,UAAAC,CAAC;YAAA,OAAIA,CAAC,CAACC,SAAS,IAAID,CAAC,CAACE,MAAM,IAAIF,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,IAAIF,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK;UAAA,CACpE,CAAC,CAACC,GAAG,CAACC,gBAAgB,CACxB,CAAC;QACH;MACJ;IACJ,CAAC,EAAE,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EACN,OAAOnB,QAAQ;AACnB;AAEA,SAASmB,gBAAgBA,CAAEC,OAAW,EAAE;EACpC,OAAO;IACHC,WAAW,EAAED,OAAO,CAACE,QAAQ,IAAIF,OAAO,CAACG,QAAQ,GAC9CH,OAAO,CAACL,SAAS,SAAIK,OAAO,CAACG,QAAQ,GACtCH,OAAO,CAACL,SAAS;IACnBE,KAAK,EAAEG,OAAO,CAACI,MAAM,CAAC,CAAC,CAAC,CAACP;EAC7B,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}